---
- name: Process Inventory Locally and Send Service Update Emails (List-Based Approach)
  hosts: patching_group*
  gather_facts: no
  vars:
    from_address: 'email@example.com'
    smtp_server: 'example.com'
    test_recipient: 'email@example.com'
  tasks:
  - name: Gather it_service Values from All Hosts
    set_fact:
      services_info: "{{ services_info | default([]) + [{'host': inventory_hostname, 'it_service': hostvars[inventory_hostname]['it_service'] | default('NOT_DEFINED'), 'service_owner_email': hostvars[inventory_hostname]['service_owner_email'] | default(''), 'tech_extra_emails': hostvars[inventory_hostname]['tech_extra_emails'] | default('')}] }}"
  - name: Group Services Info by it_service
    set_fact:
      grouped_services: "{{ services_info | groupby('it_service') }}"
  - name: Prepare Email Content for Each Service Group
    set_fact:
      service_emails_solution1: []
  # **Solution 1: Using `map` with `dict2items` and `selectattr` (Modified)**
  - name: Set Fact for Solution 1 Email Bodies
    loop: "{{ grouped_services }}"
    loop_control:
      label: "{{ item.0 }}"
    set_fact:
      service_emails_solution1: "{{ service_emails_solution1 | default([]) + [{'service': item.0, 'email_body': (item.1 | map('dict2items') | flatten | selectattr('key', 'in', ['host', 'it_service', 'service_owner_email', 'tech_extra_emails']) | list | to_nice_yaml(indent=4))}] }}"
  - name: Debug Solution 1 Email Bodies
    loop: "{{ service_emails_solution1 }}"
    debug:
      msg: "Solution 1 - Service {{ item.service }} Email Body:\n{{ item.email_body }}"
  - name: Verify service_emails content for all solutions (Combined View)
    debug:
      msg: |
        **Solution 1:**
        {{ service_emails_solution1 | to_nice_yaml(indent=4) }}